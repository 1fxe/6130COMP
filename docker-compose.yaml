version: '3.8'

services:
  # Presentation Tier 
  front-node1:
    build: ./presentation/website/
    ports:
      - "81:80"
    networks:
      - frontend
  front-node2:
    build: ./presentation/website/
    ports:
      - "82:80"
    networks:
      - frontend
  front-node3:
    build: ./presentation/website/
    ports:
      - "83:80"
    networks:
      - frontend
  front-loadbalancer:
    build: ./presentation/loadbalancer/
    ports:
      - "80:80"
    depends_on:
      - front-node1
      - front-node2
      - front-node3
    networks:
      - frontend
      - backend

  # Business Tier
  backend-node1:
    build: ./business/backend/
    ports:
      - "3001:80"
    networks:
      - backend
  backend-node2:
    build: ./business/backend/
    ports:
      - "3002:80"
    networks:
      - backend
  backend-node3:
    build: ./business/backend/
    ports:
      - "3003:80"
    networks:
      - backend
  backend-loadbalancer:
    build: ./business/loadbalancer/
    ports:
      - "3000:3000"
    depends_on:
      - backend-node1
      - backend-node2
      - backend-node3
    networks:
      - backend
      - frontend
      - database

  # Data Tier
  mongo-node1:
    image: mongo:6.0.4
    container_name: mongo1
    restart: always
    ports:
      - "40001:27017"
    networks:
      - database
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  mongo-node2:
    image: mongo:6.0.4
    container_name: mongo2
    restart: always
    ports:
      - "40002:27017"
    networks:
      - database
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  mongo-node3:
    image: mongo:6.0.4
    container_name: mongo3
    restart: always
    ports:
      - "40003:27017"
    networks:
      - database
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  mongo-setup:
    image: mongo:6.0.4
    hostname: mongo-config
    container_name: mongo-config
    restart: "no"
    volumes:
      - ./database/setup.sh
      - ./database/init.js
    entrypoint: [ "bash", "/database/setup.sh" ]

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  database:
    driver: bridge
